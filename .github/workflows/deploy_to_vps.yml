name: Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for Gradlew
        run: chmod +x ./gradlew

      - name: Build JAR with Gradle
        run: ./gradlew clean build

#      - name: Verify JAR permissions  # NEW STEP TO FIX TAR ERROR
#        run: |
#          chmod 644 build/libs/java_in_readme_backend-0.0.1-SNAPSHOT.jar
#          ls -l build/libs/java_in_readme_backend-0.0.1-SNAPSHOT.jar

      - name: List files after build
        run: ls -al build/libs

      - name: Upload JAR as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: jar-file
          path: "build/libs/java_in_readme_backend-0.0.1-SNAPSHOT.jar"

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: jar-file
#      - name: Allow read permission
#        run: |
#          chmod 644 java_in_readme_backend-0.0.1-SNAPSHOT.jar
#          ls -l java_in_readme_backend-0.0.1-SNAPSHOT.jar
      - name: Transfer JAR to VPS
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}

          source: "java_in_readme_backend-0.0.1-SNAPSHOT.jar"
          target: "/home/ubuntu/java_in_readme_backend"
      - name: SSH into VPS and Start Application
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            /home/ubuntu/java_in_readme_backend/java_in_readme_backend_starter.sh
